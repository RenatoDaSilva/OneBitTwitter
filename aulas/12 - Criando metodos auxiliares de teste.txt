#Request Helper
—————
1 – Em spec/support/ crie um arquivo chamado request_helper.rb e coloque nele:

module Requests
  module JsonHelpers
    def expect_status(expectation)
      expect(response.status).to eql(expectation)
    end

    def json
      JSON.parse(response.body)
    end
  end

  module SerializerHelpers
    def serialized serializer, object
      JSON.parse(serializer.new(object).to_json)
    end

    def each_serialized serializer, object
      serialized = ActiveModelSerializers::SerializableResource.new(object, each_serializer: serializer).to_json
      JSON.parse(serialized)
    end
  end

  module HeaderHelpers
    def header_with_authentication user
      token = Knock::AuthToken.new(payload: { sub: user.id }).token
      return { 'Authorization' => "Bearer #{token}" }
    end

    def header_without_authentication
      return { 'content-type' => 'application/json' }
    end
  end

end

#Shared Request Examples
————————
1 – Em spec/support/ crie um arquivo chamado shared_examples_spec.rb e coloque nele:

shared_examples_for :deny_without_authorization do |method_type, action, params = {}|
  it 'returns unauthrorized(401) request' do
    case method_type
    when :get
      get action,
        params: params,
        headers: header_without_authentication
    when :post
      post action,
        params: params,
        headers: header_without_authentication
    when :put
      put action,
        params: params,
        headers: header_without_authentication
    when :delete
      delete action,
        params: params,
        headers: header_without_authentication
    end

    expect(response.status).to eql(401)
  end
end

#Incluindo no Rspec
——————
1 – Adicione a spec/rails_helper.rb: (dentro de “RSpec.configure do |config|” )

# Custom json helpers
config.include Requests::JsonHelpers, type: :request
# Custom Header helpers
config.include Requests::HeaderHelpers, type: :request
# Custom Serializer helpers
config.include Requests::SerializerHelpers, type: :request